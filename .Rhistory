install.packages('statnet')
library(statnet)
install.packages('ergm')
install.packages('sna')
install.packages('coda')
library(ergm)
library(sna)
library(coda)
set.seed(0)
data(package='ergm')
data(florentine)
data(flomarriage)
data(flomarriage (florentine))
data(florentine)
data(florentine)
flomarriage
data(package='ergm')
data(florentine)
install.packages(c("ergm", "statnet"))
library(statnet)
install.packages('statnet')
library(statnet)
install.packages("statnet")
library(statnet)
install.packages('installr')
library(installr)
updateR()
install.packages('statnet')
library(statnet)
install.packages("statnet")
library(statnet)
install.packages("ergm")
library(ergm)
install.packages("sna")
library(sna)
library(coda)
install.packages("coda")
library(coda)
set.seed(0)
data(package='ergm')
data(florentine)
data(flobusiness)
data(ecoli)
library(ergm)
sessionInfo()
data(package='ergm')
data(ecoli1)
data(ergm.ecoli1)
data(package='ergm', ecoli1)
data('florentine')
flomarriage
edges
par(mfrow=c(1,2))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=c(1,2))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
summary(flomarriage~edges)
flomodel.01 <- ergm(flomarriage~edges)
summary(flomodel.01)
flomodel.01 <- ergm(flomarriage~edges)
summary(flomodel.01)
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=c(1,2))
plot(Flomarriage, main="Florentine Marriage", cex.main=0.8)
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=rep(1,2))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=c(2,4))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=rep(2,4))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=c(1,1))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=c(1,4))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=c(1,2))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
summary(flomarriage~edges+triangle)
flomodel.02 <- ergm(flomarriage~edges+triangle)
summary(flomodel.02)
class(flomodel.02)
names(flomodel.02)
flomodel.02$coef
wealth <- flomarriage %v% 'wealth'
wealth
summary(wealth)
plot(flomarriage, vertex=cex=wealth/25, main="Florentine marriage by wealth", cex.main=0.8)
plot(flomarriage, vertex.cex=wealth/25, main="Florentine marriage by wealth", cex.main=0.8)
par(mar = rep(2, 4))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mar = rep(1, 2))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=c(1,2))
par(mar = rep(2, 1))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
plot(flomarriage, vertex.cex=wealth/25, main="Florentine marriage by wealth", cex.main=0.8)
library(statnet)
library(ergm)
library(sna)
library(coda)
data("faux.mesa.high")
mesa <- faux.mesa.high
mesa
par(mfrow=c(1,1))
plot(mesa, vertex.col='Grade')
legend('bottomleft', fill=&:12, legend=paste('Grade, 7:12'), cex=0.75)
legend('bottomleft', fill=&:12,legend=paste('Grade', 7:12), cex=0.75)
legend('bottomleft', fill=7:12,legend=paste('Grade', 7:12), cex=0.75)
install.packages("RCurl")
library('RCurl')
library(ergm)
ga.mat<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=0&output=txt",
ssl.verifypeer = FALSE)
ga.mat<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=0&output=txt",
ssl.verifypeer = FALSE)
ga.mat <- as.matrix(read.table(textConnection(ga.mat), sep="\t",
header=T, row.names=1, quote="\""))
ga.atts<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=1&output=txt",
ssl.verifypeer = FALSE)
ga.atts<-read.table(textConnection(ga.atts), sep="\t", header=T, quote="\"",
stringsAsFactors=F, strip.white=T, as.is=T)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.atts)
View(ga.mat)
View(ga.mat)
View(ga.atts)
ga.mat<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=0&output=txt",
ssl.verifypeer = FALSE)
View(ga.atts)
ga.mat <- as.matrix(read.table(textConnection(ga.mat), sep="\t",
header=T, row.names=1, quote="\""))
View(ga.atts)
View(ga.atts)
ga.mat<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=0&output=txt",
ssl.verifypeer = FALSE)
View(ga.atts)
ga.mat<-getURL("./sociomat.tsv",
ssl.verifypeer = FALSE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = FALSE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
View(ga.mat)
ga.mat<-read.table(file = 'sociomat.tsv', sep = ',', header = TRUE, fill=TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = FALSE, fill=TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = FALSE, fill=TRUE)
View(ga.mat)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
View(ga.mat)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
View(ga.mat)
ga.mat <- as.matrix(read.table(textConnection(ga.mat), sep="\t",
header=T, row.names=1, quote="\""))
ga.atts<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=1&output=txt",
ssl.verifypeer = FALSE)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE)
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
foek <- as.character(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(foek),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
summary(ga.atts)
info(ga.atts)
ga.atts.info()
for (i in 1:7){
print i
}
for (i in 1:7){
print(i)
}
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts.colnames[i])
}
View(ga.atts)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE)
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
for (i in 1:7){
ga.atts$(ga.atts.colnames[i]) <- as.character(ga.atts.colnames[i])
}
View(ga.mat)
View(ga.atts)
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
}
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.mat)
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
}
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts$ga.atts.colnames[i] <- as.list(ga.atts$ga.atts.colnames[i])
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.list(ga.atts$ga.atts.colnames[i])
}
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=as.numeric(ga.atts), vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
}
ga.net<-network(ga.mat, vertex.attr=as.numeric(ga.atts), vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
}
View(ga.mat)
View(ga.atts)
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$birthyear <- as.character(ga.atts$birthyear)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$season <- as.character(ga.atts$season)
ga.atts$sign <- as.character(ga.atts$sign)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.mat)
library('RCurl')
library(ergm)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE)
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$birthyear <- as.character(ga.atts$birthyear)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$season <- as.character(ga.atts$season)
ga.atts$sign <- as.character(ga.atts$sign)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.atts)
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
library('RCurl')
library(ergm)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE)
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$birthyear <- as.character(ga.atts$birthyear)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$season <- as.character(ga.atts$season)
ga.atts$sign <- as.character(ga.atts$sign)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
View(ga.net)
library('RCurl')
library(ergm)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE, quote="\"")
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$birthyear <- as.character(ga.atts$birthyear)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$season <- as.character(ga.atts$season)
ga.atts$sign <- as.character(ga.atts$sign)
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
ga.base<-ergm(ga.net~edges+nodematch("sex")) #Estimate the model
summary(ga.base) #Summarize the model
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
str(ga.atts)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
str(ga.atts)
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$sign <- as.character(ga.atts$sign)
str(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
ga.atts <- reshape(ga.atts, varying=list(1:7), direction='long')
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE, quote="\"")
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.atts <- reshape(ga.atts, varying=list(1:7), direction='long')
str(ga.atts)
View(ga.atts)
View(ga.base)
library('RCurl')
library(ergm)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE, quote="\"")
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
ga.atts <- reshape(ga.atts, varying=list(1:7), direction='long')
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE, quote="\"")
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
str(ga.atts)
View(ga.atts)
ga.atts.list <- ga.atts.tolist()
library(PANDA)
install.packages("PANDA")
ga.atts.list <- ga.atts.tolist()
library(dlply)
library(dplyr)
ga.atts.list <- dplyr(ga.atts,.(id),c)
ga.atts.list <- dlply(ga.atts,.(id),c)
library(statnet)
library(ergm)
library(sna)
library(coda)
set.seed(0)
data('florentine')
flomarriage
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
summary(flomarriage~edges)
flomodel.01 <- ergm(flomarriage~edges)
summary(flomodel.01)
#TRIAD FORMATION
summary(flomarriage~edges+triangle)
flomodel.02 <- ergm(flomarriage~edges+triangle)
summary(flomodel.02)
class(flomodel.02)
names(flomodel.02)
flomodel.02$coef
wealth <- flomarriage %v% 'wealth'
View(flomodel.01)
View(flomarriage)
View(flobusiness)
wealth
summary(wealth)
plot(flomarriage, vertex.cex=wealth/25, main="Florentine marriage by wealth", cex.main=0.8)
install.packages("dnr")
library(statnet)
library(ergm)
library(sna)
library(coda)
data("faux.mesa.high")
mesa <- faux.mesa.high
plot(mesa, vertex.col='Grade')
legend('bottomleft',fill=7:12,lengend=paste('Grade',7:12),cex=0.75)
legend('bottomleft',fill=7:12,lengend=paste('Grade',7:12),cex=0.75)
legend('bottomleft',fill=7:12,legend=paste('Grade',7:12),cex=0.75)
fauxmodel.01 <- ergm(mesa ~edges + nodematch('Grade',diff=T) + nodematch('Race',diff=T))
summary(fauxmodel.01)
table(mesa %v% 'Race')
mixingmatrix(mesa, "Race")
summary(mesa ~edges + nodematch('Grade',diff=T) + nodematch('Race',diff=T))
library(statnet)
library(ergm)
library(sna)
library(coda)
data("samplk")
ls()
plot(samplk3)
summary(samplk3~edges+mutual)
sampmodel.01 <- ergm(samplk3~edges+mutual)
summary(sampmodel.01)
missnet <- network.initialize(10,directed=F)
missnet[1,2] <- missnet[2,7] <- missnet[3,6] <- 1
missnet[4,6] <- missnet[4,9] <- missnet[5,6] <- NA
summary(missnet)
#PLOT MISSING DATA WITH EDGE COLORED RED
tempnet <- missnet
tempnet[4,6] <- tempnet[4,9] <- tempnet[5,6] <- 1
missnetmat <-as.matrix(missnet)
missnetmat[is.na(missnetmat)] <- 2
plot(tempnet,label = network.vertex.names(tempnet),edge.col = missnetmat)
summary(missnet~edges)
summary(ergm(missnet~edges))
missnet_bad <- missnet
missnet_bad[4,6] <- missnet_bad[4,9] <- missnet_bad[5,6] <- 0
summary(missnet_bad)
summary(ergm(missnet_bad~edges))
library(statnet)
library(ergm)
library(sna)
library(coda)
flomodel.03.sim <- simulate(flomodel.03,nsim=10)
