plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
par(mfrow=c(1,2))
par(mar = rep(2, 1))
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
plot(flomarriage, vertex.cex=wealth/25, main="Florentine marriage by wealth", cex.main=0.8)
library(statnet)
library(ergm)
library(sna)
library(coda)
data("faux.mesa.high")
mesa <- faux.mesa.high
mesa
par(mfrow=c(1,1))
plot(mesa, vertex.col='Grade')
legend('bottomleft', fill=&:12, legend=paste('Grade, 7:12'), cex=0.75)
legend('bottomleft', fill=&:12,legend=paste('Grade', 7:12), cex=0.75)
legend('bottomleft', fill=7:12,legend=paste('Grade', 7:12), cex=0.75)
install.packages("RCurl")
library('RCurl')
library(ergm)
ga.mat<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=0&output=txt",
ssl.verifypeer = FALSE)
ga.mat<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=0&output=txt",
ssl.verifypeer = FALSE)
ga.mat <- as.matrix(read.table(textConnection(ga.mat), sep="\t",
header=T, row.names=1, quote="\""))
ga.atts<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=1&output=txt",
ssl.verifypeer = FALSE)
ga.atts<-read.table(textConnection(ga.atts), sep="\t", header=T, quote="\"",
stringsAsFactors=F, strip.white=T, as.is=T)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.atts)
View(ga.mat)
View(ga.mat)
View(ga.atts)
ga.mat<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=0&output=txt",
ssl.verifypeer = FALSE)
View(ga.atts)
ga.mat <- as.matrix(read.table(textConnection(ga.mat), sep="\t",
header=T, row.names=1, quote="\""))
View(ga.atts)
View(ga.atts)
ga.mat<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=0&output=txt",
ssl.verifypeer = FALSE)
View(ga.atts)
ga.mat<-getURL("./sociomat.tsv",
ssl.verifypeer = FALSE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = FALSE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
View(ga.mat)
ga.mat<-read.table(file = 'sociomat.tsv', sep = ',', header = TRUE, fill=TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = FALSE, fill=TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = FALSE, fill=TRUE)
View(ga.mat)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
View(ga.mat)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
View(ga.mat)
ga.mat <- as.matrix(read.table(textConnection(ga.mat), sep="\t",
header=T, row.names=1, quote="\""))
ga.atts<-getURL("https://docs.google.com/spreadsheet/pub?key=0Ai--oOZQWBHSdDE3Ynp2cThMamg1b0VhbEs0al9zV0E&single=true&gid=1&output=txt",
ssl.verifypeer = FALSE)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE)
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
foek <- as.character(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(foek),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
summary(ga.atts)
info(ga.atts)
ga.atts.info()
for (i in 1:7){
print i
}
for (i in 1:7){
print(i)
}
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts.colnames[i])
}
View(ga.atts)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE)
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
for (i in 1:7){
ga.atts$(ga.atts.colnames[i]) <- as.character(ga.atts.colnames[i])
}
View(ga.mat)
View(ga.atts)
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
}
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.mat)
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
}
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts$ga.atts.colnames[i] <- as.list(ga.atts$ga.atts.colnames[i])
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.list(ga.atts$ga.atts.colnames[i])
}
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=as.numeric(ga.atts), vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
}
ga.net<-network(ga.mat, vertex.attr=as.numeric(ga.atts), vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
for (i in 1:7){
ga.atts$ga.atts.colnames[i] <- as.character(ga.atts$ga.atts.colnames[i])
}
View(ga.mat)
View(ga.atts)
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$birthyear <- as.character(ga.atts$birthyear)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$season <- as.character(ga.atts$season)
ga.atts$sign <- as.character(ga.atts$sign)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.mat)
library('RCurl')
library(ergm)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE)
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$birthyear <- as.character(ga.atts$birthyear)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$season <- as.character(ga.atts$season)
ga.atts$sign <- as.character(ga.atts$sign)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=ga.atts.colnames,
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
View(ga.atts)
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
library('RCurl')
library(ergm)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE)
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$birthyear <- as.character(ga.atts$birthyear)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$season <- as.character(ga.atts$season)
ga.atts$sign <- as.character(ga.atts$sign)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
View(ga.net)
library('RCurl')
library(ergm)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE, quote="\"")
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$birthyear <- as.character(ga.atts$birthyear)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$season <- as.character(ga.atts$season)
ga.atts$sign <- as.character(ga.atts$sign)
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
ga.base<-ergm(ga.net~edges+nodematch("sex")) #Estimate the model
summary(ga.base) #Summarize the model
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
str(ga.atts)
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
str(ga.atts)
ga.atts$name <- as.character(ga.atts$name)
ga.atts$sex <- as.character(ga.atts$sex)
ga.atts$race <- as.character(ga.atts$race)
ga.atts$position <- as.character(ga.atts$position)
ga.atts$sign <- as.character(ga.atts$sign)
str(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
plot(ga.net, vertex.col=c("blue","pink")[1+(get.vertex.attribute(ga.net, "sex")=="F")],
label=get.vertex.attribute(ga.net, "name"), label.cex=.75)
ga.atts <- reshape(ga.atts, varying=list(1:7), direction='long')
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE, quote="\"")
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
ga.atts.colnames <- c('name', 'sex', 'race', 'birthyear', 'position', 'season', 'sign')
ga.atts <- reshape(ga.atts, varying=list(1:7), direction='long')
str(ga.atts)
View(ga.atts)
View(ga.base)
library('RCurl')
library(ergm)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE, quote="\"")
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
ga.atts <- reshape(ga.atts, varying=list(1:7), direction='long')
View(ga.atts)
ga.net<-network(ga.mat, vertex.attr=ga.atts, vertex.attrnames=colnames(ga.atts),
directed=F, hyper=F, loops=F, multiple=F, bipartite=F)
ga.mat<-read.table(file = 'sociomat.tsv', sep = '\t', header = TRUE, fill=TRUE, quote="\"")
ga.atts <- read.table(file = 'attributes.tsv', sep='\t', header = TRUE, quote="\"")
str(ga.atts)
View(ga.atts)
ga.atts.list <- ga.atts.tolist()
library(PANDA)
install.packages("PANDA")
ga.atts.list <- ga.atts.tolist()
library(dlply)
library(dplyr)
ga.atts.list <- dplyr(ga.atts,.(id),c)
ga.atts.list <- dlply(ga.atts,.(id),c)
library(statnet)
library(ergm)
library(sna)
library(coda)
set.seed(0)
data('florentine')
flomarriage
plot(flomarriage, main="Florentine Marriage", cex.main=0.8)
summary(flomarriage~edges)
flomodel.01 <- ergm(flomarriage~edges)
summary(flomodel.01)
#TRIAD FORMATION
summary(flomarriage~edges+triangle)
flomodel.02 <- ergm(flomarriage~edges+triangle)
summary(flomodel.02)
class(flomodel.02)
names(flomodel.02)
flomodel.02$coef
wealth <- flomarriage %v% 'wealth'
View(flomodel.01)
View(flomarriage)
View(flobusiness)
wealth
summary(wealth)
plot(flomarriage, vertex.cex=wealth/25, main="Florentine marriage by wealth", cex.main=0.8)
install.packages("dnr")
library(statnet)
library(ergm)
library(sna)
library(coda)
data("faux.mesa.high")
mesa <- faux.mesa.high
plot(mesa, vertex.col='Grade')
legend('bottomleft',fill=7:12,lengend=paste('Grade',7:12),cex=0.75)
legend('bottomleft',fill=7:12,lengend=paste('Grade',7:12),cex=0.75)
legend('bottomleft',fill=7:12,legend=paste('Grade',7:12),cex=0.75)
fauxmodel.01 <- ergm(mesa ~edges + nodematch('Grade',diff=T) + nodematch('Race',diff=T))
summary(fauxmodel.01)
table(mesa %v% 'Race')
mixingmatrix(mesa, "Race")
summary(mesa ~edges + nodematch('Grade',diff=T) + nodematch('Race',diff=T))
library(statnet)
library(ergm)
library(sna)
library(coda)
data("samplk")
ls()
plot(samplk3)
summary(samplk3~edges+mutual)
sampmodel.01 <- ergm(samplk3~edges+mutual)
summary(sampmodel.01)
missnet <- network.initialize(10,directed=F)
missnet[1,2] <- missnet[2,7] <- missnet[3,6] <- 1
missnet[4,6] <- missnet[4,9] <- missnet[5,6] <- NA
summary(missnet)
#PLOT MISSING DATA WITH EDGE COLORED RED
tempnet <- missnet
tempnet[4,6] <- tempnet[4,9] <- tempnet[5,6] <- 1
missnetmat <-as.matrix(missnet)
missnetmat[is.na(missnetmat)] <- 2
plot(tempnet,label = network.vertex.names(tempnet),edge.col = missnetmat)
summary(missnet~edges)
summary(ergm(missnet~edges))
missnet_bad <- missnet
missnet_bad[4,6] <- missnet_bad[4,9] <- missnet_bad[5,6] <- 0
summary(missnet_bad)
summary(ergm(missnet_bad~edges))
library(statnet)
library(ergm)
library(sna)
library(coda)
flomodel.03.sim <- simulate(flomodel.03,nsim=10)
library(statnet)
KNOKI <-  list(
c(0,1,0,0,1,0,1,0,1,0),
c(1,0,1,1,1,0,1,1,1,0),
c(0,1,0,1,1,1,1,0,0,1),
c(1,1,0,0,1,0,1,0,0,0),
c(1,1,1,1,0,0,1,1,1,1),
c(0,0,1,0,0,0,1,0,1,0),
c(0,1,0,1,1,0,0,0,0,0),
c(1,1,0,1,1,0,1,0,1,0),
c(0,1,0,0,1,0,1,0,0,0),
c(1,1,1,0,1,0,1,0,0,0)
)
KNOKE <-  list(
c(0,0,1,0,1,0,0,1,1,1),
c(0,0,1,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1,0,0),
c(0,1,1,0,0,0,1,1,1,0),
c(0,1,1,0,0,0,0,1,1,0),
c(0,0,0,0,0,0,0,0,0,0),
c(0,1,0,0,0,0,0,1,0,0),
c(0,0,0,0,0,0,0,0,1,1),
c(0,0,1,0,0,0,0,1,0,0),
c(0,0,0,0,0,0,0,0,0,0)
)
View(KNOKE)
library(statnet)
KNOKI <-  matrix(list(
c(0,1,0,0,1,0,1,0,1,0),
c(1,0,1,1,1,0,1,1,1,0),
c(0,1,0,1,1,1,1,0,0,1),
c(1,1,0,0,1,0,1,0,0,0),
c(1,1,1,1,0,0,1,1,1,1),
c(0,0,1,0,0,0,1,0,1,0),
c(0,1,0,1,1,0,0,0,0,0),
c(1,1,0,1,1,0,1,0,1,0),
c(0,1,0,0,1,0,1,0,0,0),
c(1,1,1,0,1,0,1,0,0,0)
))
KNOKE <-  matrix(list(
c(0,0,1,0,1,0,0,1,1,1),
c(0,0,1,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1,0,0),
c(0,1,1,0,0,0,1,1,1,0),
c(0,1,1,0,0,0,0,1,1,0),
c(0,0,0,0,0,0,0,0,0,0),
c(0,1,0,0,0,0,0,1,0,0),
c(0,0,0,0,0,0,0,0,1,1),
c(0,0,1,0,0,0,0,1,0,0),
c(0,0,0,0,0,0,0,0,0,0)
))
View(KNOKE)
library(statnet)
KNOKI <-  matrix(
c(0,1,0,0,1,0,1,0,1,0),
c(1,0,1,1,1,0,1,1,1,0),
c(0,1,0,1,1,1,1,0,0,1),
c(1,1,0,0,1,0,1,0,0,0),
c(1,1,1,1,0,0,1,1,1,1),
c(0,0,1,0,0,0,1,0,1,0),
c(0,1,0,1,1,0,0,0,0,0),
c(1,1,0,1,1,0,1,0,1,0),
c(0,1,0,0,1,0,1,0,0,0),
c(1,1,1,0,1,0,1,0,0,0)
)
KNOKI <-  matrix(
c(0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,0,1,0,1,1,1,1,0,0,1,1,1,0,0,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,1,0,1,1,0,0,0,0,0,1,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1,1,1,0,1,0,1,0,0,0),
nrow=10,
ncol=10,
byrow=T)
View(KNOKI)
dimnames(KNOKI) = list(c(1,2,3,4,5,6,7,8,9,10), c("C","C","E","I","M","W","N","U","W","W"))
View(KNOKI)
KNOKE <-  matrix(
c(0,0,1,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,1,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0),
nrow=10,
ncol=10,
byrow=T)
dimnames(KNOKE) = list(c(1,2,3,4,5,6,7,8,9,10), c("C","C","E","I","M","W","N","U","W","W"))
View(KNOKE)
mean(KNOKI)
mean(KNOKE)
summary(KNOKI)
sd(KNOKI)
sd(KNOKE)
fivnum(KNOKI)
fivenum(KNOKI)
gcor(KNOKI, KNOKE)
network.density(KNOKI)
KNOKI.n <- as.network(KNOKI)
network.density(KNOKI.n)
KNOKE.n <- as.network(KNOKE)
network.density(KNOKe.n)
network.density(KNOKE.n)
KNOK.cor <- qaptest(list(KNOKI, KNOKE), gcor, g1=1, g2=2, reps=1000)
KNOK.cor
plot(KNOL.cor, xlim=c(-0.25, 0.4))
plot(KNOK.cor, xlim=c(-0.25, 0.4))
KNOK.cor <- qaptest(list(KNOKI, KNOKE), gcor, g1=1, g2=2, reps=2000)
KNOK.cor
gcor(KNOKI, KNOKE)
KNOKI.n
summary(KNOKI.n)
summary(KNOKE.n)
KNOK.cor <- qaptest(list(KNOKI, KNOKE), gcor, g1=1, g2=2, reps=2000)
KNOK.cor
plot(summary(KNOKI.n ∼ degree(0:10)), type = “l”, lty = 1, lwd = 2,+ xlab = “Degree”, ylab = ”Count”)R> lines(summary(sim2 ∼ degree(0:10)), lty = 2, lwd = 3)R> legend(“topright”, legend = c(“Observed”, “Simulated”), lwd = 3,+ lty = 1:2)
nl<-netlm(KNOKE.n,           # Dependent variable/network
KNOKI.n, # List the independent variables/networks
reps=2000)
summary(nl)
nl<-netlm(KNOKE.n,           # Dependent variable/network
KNOKI.n, # List the independent variables/networks
reps=10000)
summary(nl)
nlog<-netlogit(KNOKE.n, KNOKI.n,reps=1000)
summary(nlog)
KNOKE.v <- as.vecor(KNOKE.n)
KNOKE.v <- as.vector(KNOKE.n)
KNOKI.v <- as.vector(KNOKI.n)
KNOK.v <- c(KNOKE.v, KNOKI.v)
KNOK.group = factor(rep(letters[1:2], each = 100))
bartlett.test(KNOK.v,KNOK.group)
KNOK.v <- as.vector(c(KNOKE.v, KNOKI.v))
bartlett.test(KNOK.v,KNOK.group)
KNOK.v <- c(KNOKE.v, KNOKI.v)
fit = lm(formula = KNOK.v ~ KNOK.groups)
fit = lm(formula = KNOK.v ~ KNOK.group)
fit = lm(formula = as.vector(KNOK.v) ~ KNOK.group)
fit = lm(formula = KNOK.v ~ KNOK.group)
url <- "http://vlado.fmf.uni-lj.si/pub/networks/data/ucinet/padgett.dat"
tmp <- tempdir()
dest <- paste(sep="", tmp, "/", "padgett.dat")
download.file(url, dest)
l <- readLines(paste(sep="", tmp, "/padgett.dat"))
url2 <- "http://vlado.fmf.uni-lj.si/pub/networks/data/ucinet/padgw.dat"
dest <- paste(sep="", tmp, "/", "padgw.dat")
download.file(url2, dest)
l2 <- readLines(paste(sep="", tmp, "/padgw.dat"))
rowlab <- l[ (grep("^ROW LABELS:", l)+1):(grep("^COLUMN LABELS:", l)-1) ]
collab <- l[ (grep("^COLUMN LABELS:", l)+1):(grep("^LEVEL LABELS:", l)-1) ]
data <- l[ (grep("^DATA:", l)+1):length(l) ]
data <- paste(data, collapse="\n")
tc <- textConnection(data)
mat <- as.matrix(read.table(tc))
close(tc)
mat1 <- mat[1:16,]
mat2 <- mat[17:32,]
colnames(mat1) <- rownames(mat1) <- colnames(mat2) <- rownames(mat2) <- rowlab
library(igraph)
g1 <- g_adj_matrix(mat1, mode="undirected")
g2 <- g_adj_matrix(mat2, mode="undirected")
mlabs <- l2[ (grep("^COLUMN LABELS:", l2)+1):(grep("^DATA", l2)-1) ]
alabs <- l2[ (grep("^ROW LABELS:", l2)+1):(grep("^COLUMN LABELS", l2)-1) ]
data2 <- l2[ (grep("^DATA:", l2)+1):length(l2)]
data2 <- paste(data2, collapse="\n")
tc <- textConnection(data2)
meta <- as.matrix(read.table(tc))
close(tc)
rownames(meta) <- alabs
colnames(meta) <- mlabs
meta <- meta[V(g1)$name,]
g1$name <- "Padgett Frorentine families, business"
g2$name <- "Padgett Frorentine families, marriage"
g1$Author <- g2$Author <- "John Padgett"
g1$Citation <- g2$Citation <- "Kent D. (1978). The rise of the Medici: Faction in Florence, 1426-1434. Oxford: Oxford University Press."
g1$URL <- g2$URL <- "http://vlado.fmf.uni-lj.si/pub/networks/data/ucinet/ucidata.htm"
V(g1)$Wealth <- V(g2)$Wealth <- meta[,1]
V(g1)$Priors <- V(g2)$Priors <- meta[,2]
V(g1)$Ties <- V(g2)$Ties <- meta[,3]
padgett <- list(PADGB=g1, PADGM=g2)
View(mat)
View(mat1)
View(mat2)
View(meta)
View(mat2)
View(meta)
cug.test(KNOKE.n, KNOKI.n)
cug.test(KNOKE.n, KNOKI.n, cmode="size")
cug.test(KNOKE.n, cmode="size")
statnet?
help()
?statnet
install.packages("statnetWeb")
KNOK.cor <- qaptest(list(KNOKI, KNOKE), gcor, g1=1, g2=2, reps=2000)
KNOK.cor
plot(KNOK.cor, xlim=c(-0.25, 0.4))
KNOK.cor <- qaptest(list(KNOKE, KNOKI), gcor, g1=1, g2=2, reps=2000)
KNOK.cor
plot(KNOK.cor, xlim=c(-0.25, 0.4))
nl<-netlm(KNOKE.n,           # Dependent variable/network
KNOKI.n, # List the independent variables/networks
reps=1000)
summary(nl)
nlog<-netlogit(KNOKE.n, KNOKI.n,reps=1000)
summary(nlog)
gcor(KNOKI, KNOKE)
